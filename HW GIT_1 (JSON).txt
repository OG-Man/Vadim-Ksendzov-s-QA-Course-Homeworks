
JSON

 4. Создать внешний репозиторий c названием JSON.
    Done
 5. Клонировать репозиторий JSON на локальный компьютер.
    git clone {SSH key}
 6. Внутри локального JSON создать файл “new.json”.
    touch JSON/new.json
 7. Добавить файл под гит.
    cd JSON/
    git add new.json
 8. Закоммитить файл.
    git commit -m 'Add new empty .json file'
 9. Отправить файл на внешний GitHub репозиторий.
    git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
    nano new.json  -> Ввести текст
{
  "first name": "Oleg",
  "last name": "Golovin",
  "age": "34",
  "pets counter": "2",
  "salary at wish": "To Infinity and Beyond! (c)"
}

    Сохранить и выйти

 11. Отправить изменения на внешний репозиторий.
    git add new.json
    git commit -m 'Add some info about me'
    git push

 12. Создать файл preferences.json
    touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.

    nano preferences.json

{
  "movie": "Forrest Gump",
  "TVseries": [
    "Stranger Things",
    "Futurama",
    "Monty Python’s Flying Circus",
    "Twin Peaks",
    "The Office (US)",
    "Firefly",
    "Gravity Falls"
  ],
  "dish": "potato-based gratin",
  "season": "summer",
  "countries": [
    "Ireland",
    "Japan",
    "New Zealand",
    "Montenegro"
  ]
}

 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON

    touch skills.json
    nano skills.json

{
  "skills": [    
    "manual testing",
    "writing test cases",
    "writing check lists",
    "writing bug reports",
    "GIT fundamentals",
    "GitBash commands",
    "mobile testing",
    "API testing using Postman",
    "SQL fundamentals"
  ]
}
    
 15. Отправить сразу 2 файла на внешний репозиторий.
    git add .
    git commit -m 'Add 2 new files'
    git push

 16. На веб интерфейсе создать файл bug_report.json.
    Add file -> Add new file -> Дать название файлу

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    Создать коммит и сохранить

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
    Done
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
    Done
 20. Синхронизировать внешний и локальный репозиторий JSON
    git pull
